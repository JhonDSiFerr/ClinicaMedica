/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package AtendenteTelas;

import Daos.PacienteDAO;
import Entidades.Paciente;
import Login.LoginTela;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisson Dias
 */
public class PacientesCadastradosAtendente extends javax.swing.JFrame {
    
    
    
    private String cpfSelecionado = null;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(PacientesCadastradosAtendente.class.getName());

    /**
     * Creates new form Menumain
     */
    public PacientesCadastradosAtendente() {
        initComponents();
        
        
         preencherTabela();
         
         PacientesTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // Pega a linha que foi clicada
                int linhaSelecionada = PacientesTable.getSelectedRow();
                
                if (linhaSelecionada != -1) { // Garante que uma linha foi realmente selecionada
                    // Pega o valor da coluna do CPF (assumindo que é a coluna 1, a segunda coluna)
                    // Lembre-se que a contagem começa em 0. Se CPF for a primeira coluna, use 0.
                    cpfSelecionado = PacientesTable.getValueAt(linhaSelecionada, 1).toString();
                }
            }
        });
         
         
            PacientesCadastradosMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    PacientesCadastradosMenuMouseClicked(evt);
                }
            });
            CadastrarPacientesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    CadastrarPacientesMenuMouseClicked(evt);
                }
            });
            AgendarConsultasMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    AgendarConsultasMenuMouseClicked(evt);
                }
            });
           
            CadastrarMedicoMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    CadastrarMedicoMenuMouseClicked(evt);
                }
            });
            MedicosCadastradosMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    MedicosCadastradosMenuMouseClicked(evt);
                }
            });
            CadastrarEspecialidadesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    CadastrarEspecialidadesMenuMouseClicked(evt);
                }
            });
            ListarEspecialidadeMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    ListarEspecialidadesMenuMouseClicked(evt);
                }
            });
            AgendaMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    AgendaMenuMouseClicked(evt);
                }
            });
            SairMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    SairMenuMouseClicked(evt);
                }
            });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jScrollPane2 = new javax.swing.JScrollPane();
        PacientesTable = new javax.swing.JTable();
        EditarPacientesCadastradosButton = new javax.swing.JButton();
        AtualizarButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        PacientesMenu = new javax.swing.JMenu();
        PacientesCadastradosMenu = new javax.swing.JMenu();
        CadastrarPacientesMenu = new javax.swing.JMenu();
        AgendarConsultasMenu = new javax.swing.JMenu();
        MedicosMenu = new javax.swing.JMenu();
        CadastrarMedicoMenu = new javax.swing.JMenu();
        MedicosCadastradosMenu = new javax.swing.JMenu();
        EspecialideMenu = new javax.swing.JMenu();
        CadastrarEspecialidadesMenu = new javax.swing.JMenu();
        ListarEspecialidadeMenu = new javax.swing.JMenu();
        AgendaMenu = new javax.swing.JMenu();
        SairMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PacientesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Cpf", "Telefone", "Data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PacientesTable);

        EditarPacientesCadastradosButton.setText("Editar Pacientes Cadastrados");
        EditarPacientesCadastradosButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarPacientesCadastradosButtonActionPerformed(evt);
            }
        });

        AtualizarButton.setText("Atualizar");
        AtualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarButtonActionPerformed(evt);
            }
        });

        PacientesMenu.setText("Pacientes");

        PacientesCadastradosMenu.setText("Pacientes Cadastrados");
        PacientesMenu.add(PacientesCadastradosMenu);

        CadastrarPacientesMenu.setText("Cadastrar Paciente");
        PacientesMenu.add(CadastrarPacientesMenu);

        jMenuBar1.add(PacientesMenu);

        AgendarConsultasMenu.setText("Agendar Consultas");
        jMenuBar1.add(AgendarConsultasMenu);

        MedicosMenu.setText("Médicos");

        CadastrarMedicoMenu.setText("Cadastrar Médico");
        MedicosMenu.add(CadastrarMedicoMenu);

        MedicosCadastradosMenu.setText("Médicos Cadastrados");
        MedicosMenu.add(MedicosCadastradosMenu);

        jMenuBar1.add(MedicosMenu);

        EspecialideMenu.setText("Especialidades");

        CadastrarEspecialidadesMenu.setText("Cadastrar Especialidades");
        EspecialideMenu.add(CadastrarEspecialidadesMenu);

        ListarEspecialidadeMenu.setText("Listar Especialidades");
        EspecialideMenu.add(ListarEspecialidadeMenu);

        jMenuBar1.add(EspecialideMenu);

        AgendaMenu.setText("Agenda");
        jMenuBar1.add(AgendaMenu);

        SairMenu.setText("Sair");
        jMenuBar1.add(SairMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AtualizarButton)
                .addGap(18, 18, 18)
                .addComponent(EditarPacientesCadastradosButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditarPacientesCadastradosButton)
                    .addComponent(AtualizarButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void PacientesCadastradosMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                      
      PacientesCadastradosAtendente PacientesCadastrados = new PacientesCadastradosAtendente ();
    PacientesCadastrados.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                     

    private void CadastrarPacientesMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                    
         CadastrarPaciente CadastrarPacientes = new CadastrarPaciente();
    CadastrarPacientes.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                   

    private void AgendarConsultasMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                  
    
   AgendarCosulta AgendarCosulta  = new AgendarCosulta();
    AgendarCosulta.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                 

 
    private void CadastrarMedicoMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                 
       CadastrarMedico  CadastrarMedico = new  CadastrarMedico();
     CadastrarMedico.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                

    private void MedicosCadastradosMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                    
        MedicosCadastradosAtendente MedicosCadastrados= new MedicosCadastradosAtendente();
    MedicosCadastrados.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                   

    private void CadastrarEspecialidadesMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                         
        Cadastrarespecialidades Cadastrarespecialidades  =  new Cadastrarespecialidades();
    Cadastrarespecialidades.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                        

    private void ListarEspecialidadesMenuMouseClicked(java.awt.event.MouseEvent evt) {                                                      
       EspecialidadeCadastradas  EspecialidadeCadastradas = new EspecialidadeCadastradas();
    EspecialidadeCadastradas.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                                     

    private void AgendaMenuMouseClicked(java.awt.event.MouseEvent evt) {                                        
    Agenda Agenda = new Agenda();
    Agenda.setVisible(true); // Torna a tela visível
    this.dispose();
    }                                       

    private void SairMenuMouseClicked(java.awt.event.MouseEvent evt) {
        String[] options = {"Sim", "Não"};
        int confirm = javax.swing.JOptionPane.showOptionDialog(this,
                "Tem certeza que deseja voltar ao login?",
                "Confirmar Saída", javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]);
        if (confirm == 0) {
            LoginTela LoginTela = new LoginTela();
            LoginTela.setVisible(true); // Torna a tela visível
            this.dispose();
        }
    }   
    
    private void EditarPacientesCadastradosButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarPacientesCadastradosButtonActionPerformed
 if (cpfSelecionado != null) {
            // Abre a tela de cadastro, mas passando o CPF para o construtor
            // Isto colocará a tela em "modo de edição"
             EditarPaciente telaEdicao = new EditarPaciente(cpfSelecionado);
        telaEdicao.setVisible(true);

            // O ideal é recarregar a tabela depois que a tela de edição for fechada
            // Uma forma simples é adicionar um botão "Atualizar" que chama preencherTabela()
            
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um paciente na tabela para editar.", "Nenhum paciente selecionado", JOptionPane.WARNING_MESSAGE);
        }







        // TODO add your handling code here:
    }//GEN-LAST:event_EditarPacientesCadastradosButtonActionPerformed

    private void AtualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarButtonActionPerformed
 
        preencherTabela();    
        
// TODO add your handling code here:
    }//GEN-LAST:event_AtualizarButtonActionPerformed

    
    private void preencherTabela() {
        DefaultTableModel modelo = (DefaultTableModel) PacientesTable.getModel();
        modelo.setRowCount(0); // Limpa a tabela

        PacienteDAO pdao = new PacienteDAO();
        List<Paciente> listaPacientes = pdao.findAll();
        
        DateTimeFormatter formatador = DateTimeFormatter.ofPattern("dd/MM/yyyy");

        for (Paciente p : listaPacientes) {
            // Adiciona uma nova linha para cada paciente da lista
            modelo.addRow(new Object[]{
                p.getNome(),
                p.getCpf(),
                p.getTelefone(),
                p.getDataNascimento().format(formatador)
            });
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new PacientesCadastradosAtendente().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu AgendaMenu;
    private javax.swing.JMenu AgendarConsultasMenu;
    private javax.swing.JButton AtualizarButton;
    private javax.swing.JMenu CadastrarEspecialidadesMenu;
    private javax.swing.JMenu CadastrarMedicoMenu;
    private javax.swing.JMenu CadastrarPacientesMenu;
    private javax.swing.JButton EditarPacientesCadastradosButton;
    private javax.swing.JMenu EspecialideMenu;
    private javax.swing.JMenu ListarEspecialidadeMenu;
    private javax.swing.JMenu MedicosCadastradosMenu;
    private javax.swing.JMenu MedicosMenu;
    private javax.swing.JMenu PacientesCadastradosMenu;
    private javax.swing.JMenu PacientesMenu;
    private javax.swing.JTable PacientesTable;
    private javax.swing.JMenu SairMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
