/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.sistemaclinica.view;

import br.com.sistemaclinica.dao.EspecialidadeDAO;
import br.com.sistemaclinica.dao.FuncionarioDAO;
import br.com.sistemaclinica.model.Especialidade;
import br.com.sistemaclinica.model.Funcionario;
import br.com.sistemaclinica.model.TipoFuncionario;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
/**
 *
 * @author Alisson Dias
 */
public class TelaCadastroFuncionario extends javax.swing.JFrame {
       
    private int idFuncionarioSelecionado = 0; // <<-- ADICIONE ESTA LINHA
    
    private void tblFuncionariosValueChanged(javax.swing.event.ListSelectionEvent evt) {                                             
    if (!evt.getValueIsAdjusting()) {
        int linhaSelecionada = tblFuncionarios.getSelectedRow();
        if (linhaSelecionada != -1) {
            // Pega o ID da coluna 0, converte para Integer e guarda na nossa variável
            idFuncionarioSelecionado = Integer.parseInt(tblFuncionarios.getValueAt(linhaSelecionada, 0).toString()); // <<-- ADICIONE ESTA LINHA

            // Pega os outros dados e preenche os campos
            String nome = tblFuncionarios.getValueAt(linhaSelecionada, 1).toString();
            String usuario = tblFuncionarios.getValueAt(linhaSelecionada, 2).toString();
            String cpf = tblFuncionarios.getValueAt(linhaSelecionada, 3).toString();

            txtNome.setText(nome);
            txtUsuario.setText(usuario);
            txtCpf.setText(cpf);

            txtUsuario.setEnabled(false);
            txtCpf.setEnabled(false);
        }
    }
}
    private void carregarEspecialidades() {
    EspecialidadeDAO dao = new EspecialidadeDAO();
    List<Especialidade> lista = dao.listarTodos();
    cmbEspecialidadeFunc.removeAllItems();
    for (Especialidade e : lista) {
        cmbEspecialidadeFunc.addItem(e);
    }
}
    private void carregarTabela() {
        // 1. Chamar o DAO para obter a lista de funcionários.
        FuncionarioDAO dao = new FuncionarioDAO();
        List<Funcionario> listaFuncionarios = dao.listarTodos();

        // 2. Preparar o modelo da tabela. DefaultTableModel permite adicionar linhas e colunas facilmente.
        DefaultTableModel modeloTabela = (DefaultTableModel) tblFuncionarios.getModel();
        
        // 3. Limpar a tabela antes de adicionar novos dados para evitar duplicatas.
        modeloTabela.setRowCount(0);

        // 4. Definir as colunas da tabela (se ainda não estiverem definidas).
        // Isso garante que as colunas tenham os nomes que queremos.
        modeloTabela.setColumnIdentifiers(new Object[]{"ID", "Nome", "Usuário", "CPF"});

        // 5. Percorrer a lista de funcionários e adicionar cada um como uma nova linha na tabela.
        for (Funcionario f : listaFuncionarios) {
            modeloTabela.addRow(new Object[]{
                f.getId(),
                f.getNome(),
                f.getUsuario(),
                f.getCpf()
            });
        }
    }
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(TelaCadastroFuncionario.class.getName());

    /**
     * Creates new form TelaCadastroFuncionario
     */
    public TelaCadastroFuncionario() {
        initComponents();
        lblEspecialidade.setVisible(false); // Supondo que o JLabel se chama lblEspecialidade
        cmbEspecialidadeFunc.setVisible(false);
        cmbTipoFuncionario.addItem("ATENDENTE");
        cmbTipoFuncionario.addItem("MEDICO");
        cmbTipoFuncionario.addItem("OUTROS");
        carregarTabela();
        carregarEspecialidades(); 
        tblFuncionarios.getSelectionModel().addListSelectionListener(new javax.swing.event.ListSelectionListener() {
        
        @Override
        public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
            // Este método é chamado toda vez que a seleção muda.
            // Dentro dele, nós simplesmente chamamos o nosso outro método que faz o trabalho pesado.
            tblFuncionariosValueChanged(evt);
        }

            
    });
        
       cmbTipoFuncionario.addItem("ATENDENTE");
       cmbTipoFuncionario.addItem("MEDICO");
       cmbTipoFuncionario.addItem("OUTROS");
       carregarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtCpf = new javax.swing.JTextField();
        txtUsuario = new javax.swing.JTextField();
        txtDataNascimento = new javax.swing.JTextField();
        pwdSenha = new javax.swing.JPasswordField();
        cmbTipoFuncionario = new javax.swing.JComboBox<>();
        btnSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFuncionarios = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();
        cmbEspecialidadeFunc = new javax.swing.JComboBox();
        lblEspecialidade = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Cpf:");

        jLabel2.setText("Nome:");

        jLabel3.setText("Senha:");

        jLabel4.setText("DatadeNascimento:");

        jLabel5.setText("Tipo de Funcionario:");

        jLabel6.setText("Usuario:");

        txtDataNascimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataNascimentoActionPerformed(evt);
            }
        });

        pwdSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdSenhaActionPerformed(evt);
            }
        });

        cmbTipoFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoFuncionarioActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        tblFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblFuncionarios);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnDeletar.setBackground(new java.awt.Color(255, 51, 51));
        btnDeletar.setText("Apagar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        cmbEspecialidadeFunc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblEspecialidade.setText("Especialidade:");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbEspecialidadeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbTipoFuncionario, 0, 134, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(pwdSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                                .addComponent(txtNome)))
                                        .addComponent(txtCpf)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(txtUsuario))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDataNascimento))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnSalvar)
                        .addGap(18, 18, 18)
                        .addComponent(btnNovo)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeletar)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(pwdSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbTipoFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvar)
                            .addComponent(btnNovo)
                            .addComponent(btnDeletar)
                            .addComponent(btnCancelar))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbEspecialidadeFunc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEspecialidade))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDataNascimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataNascimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataNascimentoActionPerformed

    private void pwdSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdSenhaActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
     // --- 1. COLETA DE DADOS DA TELA ---
    Funcionario funcionario = new Funcionario();
    funcionario.setNome(txtNome.getText());
    funcionario.setUsuario(txtUsuario.getText());
    funcionario.setSenha(new String(pwdSenha.getPassword()));
    funcionario.setCpf(txtCpf.getText());

    // --- 2. CONVERSÃO E VALIDAÇÃO DA DATA ---
    try {
        String dataTexto = txtDataNascimento.getText();
        java.time.format.DateTimeFormatter formatador = java.time.format.DateTimeFormatter.ofPattern("dd/MM/yyyy");
        funcionario.setDataNascimento(java.time.LocalDate.parse(dataTexto, formatador));
    } catch (java.time.format.DateTimeParseException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Formato de data inválido! Use dd/MM/yyyy.", "Erro de Formato", javax.swing.JOptionPane.ERROR_MESSAGE);
        return; // Interrompe a execução se a data estiver errada
    }

    // --- 3. LÓGICA DE TIPO E ESPECIALIDADE ---
    String tipoSelecionado = (String) cmbTipoFuncionario.getSelectedItem();
    funcionario.setTipoFuncionario(TipoFuncionario.valueOf(tipoSelecionado));

    // Se o funcionário for um médico, pega a especialidade selecionada.
    if ("MEDICO".equals(tipoSelecionado)) {
        Especialidade esp = (Especialidade) cmbEspecialidadeFunc.getSelectedItem();
        funcionario.setEspecialidade(esp);
    } else {
        // Se não for médico, garante que a especialidade seja nula.
        funcionario.setEspecialidade(null);
    }

    // --- 4. LÓGICA PARA SALVAR (CADASTRAR OU ATUALIZAR) ---
    // Este bloco agora está fora do if/else anterior e será sempre executado.
    try {
        FuncionarioDAO dao = new FuncionarioDAO();

        if (idFuncionarioSelecionado == 0) {
            dao.cadastrar(funcionario);
            javax.swing.JOptionPane.showMessageDialog(this, "Funcionário cadastrado com sucesso!", "Sucesso", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            funcionario.setId(idFuncionarioSelecionado);
            dao.atualizar(funcionario);
            javax.swing.JOptionPane.showMessageDialog(this, "Funcionário atualizado com sucesso!", "Sucesso", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }

        // Limpa o formulário e recarrega a tabela
        btnNovoActionPerformed(null);
        carregarTabela();

    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Erro ao salvar funcionário:\n" + e.getMessage(), "Erro no Banco de Dados", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    // TODO add your handling code here:
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
  // Limpa todos os campos de texto
    txtNome.setText("");
    txtUsuario.setText("");
    pwdSenha.setText("");
    txtCpf.setText("");
    txtDataNascimento.setText("");

    // Habilita os campos que foram desabilitados
    txtUsuario.setEnabled(true);
    txtCpf.setEnabled(true);

    // Remove a seleção da tabela
    tblFuncionarios.clearSelection();

    // Zera nossa variável de controle. Este é o passo mais importante!
    idFuncionarioSelecionado = 0;        // TODO add your handling code here:
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
   // 1. Verifica se algum funcionário foi selecionado na tabela.
        if (idFuncionarioSelecionado == 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, selecione um funcionário na tabela para excluir.", "Nenhum funcionário selecionado", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 2. Pede confirmação ao usuário. Este é um passo MUITO importante para evitar exclusões acidentais.
        int resposta = javax.swing.JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir este funcionário?\nEsta ação não pode ser desfeita.", "Confirmação de Exclusão", javax.swing.JOptionPane.YES_NO_OPTION);

        // 3. Se o usuário clicou em "Sim"...
        if (resposta == javax.swing.JOptionPane.YES_OPTION) {
            try {
                // Cria o DAO e chama o método deletar, passando o ID que já guardamos.
                FuncionarioDAO dao = new FuncionarioDAO();
                dao.deletar(idFuncionarioSelecionado);

                // Mostra a mensagem de sucesso.
                javax.swing.JOptionPane.showMessageDialog(this, "Funcionário excluído com sucesso!", "Sucesso", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                // Limpa o formulário e recarrega a tabela para refletir a exclusão.
                btnNovoActionPerformed(null);
                carregarTabela();

            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Erro ao excluir funcionário:\n" + e.getMessage(), "Erro no Banco de Dados", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void cmbTipoFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoFuncionarioActionPerformed
 String tipoSelecionado = (String) cmbTipoFuncionario.getSelectedItem();

    // Se o tipo selecionado for "MEDICO", mostra os campos de especialidade.
    if ("MEDICO".equals(tipoSelecionado)) {
        lblEspecialidade.setVisible(true);
        cmbEspecialidadeFunc.setVisible(true);
    } else {
        // Para qualquer outro tipo, esconde os campos.
        lblEspecialidade.setVisible(false);
        cmbEspecialidadeFunc.setVisible(false);
    }
      // TODO add your handling code here:
    }//GEN-LAST:event_cmbTipoFuncionarioActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
  // Este comando fecha a janela ATUAL e libera seus recursos da memória,
    // revelando a tela que estava por baixo (a TelaPrincipal).
    this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new TelaCadastroFuncionario().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbEspecialidadeFunc;
    private javax.swing.JComboBox<String> cmbTipoFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEspecialidade;
    private javax.swing.JPasswordField pwdSenha;
    private javax.swing.JTable tblFuncionarios;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtDataNascimento;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}
